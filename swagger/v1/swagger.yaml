---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/games":
    get:
      summary: LIST games
      tags:
      - Games
      description: List all games.
      responses:
        '200':
          description: Returns a list of games
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    slug:
                      type: string
                  required:
                  - id
                  - name
                  - slug
                required:
                - id
                - name
                - slug
                example:
                - id: 1
                  name: Pokemon Scarlet & Violet
                  slug: chess
                - id: 2
                  name: Checkers
                  slug: checkers
    post:
      summary: Create Game
      tags:
      - Games
      description: Create a new game.
      parameters: []
      responses:
        '201':
          description: Game Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  slug:
                    type: string
                required:
                - id
                - name
                - slug
                example:
                  id: 420
                  name: Pokemon Scarlet & Violet
                  slug: pokemon-scarlet-violet
        '422':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
                example:
                  error: Name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 420
                name:
                  type: string
                  example: Pokemon Scarlet & Violet
                slug:
                  type: string
                  example: pokemon-scarlet-violet
              required:
              - name
              - slug
  "/api/v1/games/{id}":
    parameters:
    - name: id
      in: path
      description: Game ID
      required: true
      schema:
        type: integer
    get:
      summary: Show Game
      tags:
      - Games
      description: Show a game.
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    patch:
      summary: update game
      responses:
        '200':
          description: successful
    put:
      summary: update game
      responses:
        '200':
          description: successful
    delete:
      summary: delete game
      responses:
        '200':
          description: successful
servers:
- url: http://localhost
