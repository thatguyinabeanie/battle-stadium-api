---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/games":
    get:
      summary: List Games
      tags:
      - Games
      description: Retrieves a list of all games
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Game"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    post:
      summary: Create Game
      tags:
      - Games
      description: Creates a new game.
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Game"
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - game
  "/api/v1/games/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the game
      required: true
      schema:
        type: string
    get:
      summary: Show Game
      tags:
      - Games
      description: Retrieves a specific game by ID.
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Game"
        '404':
          description: not found
    patch:
      summary: Update Game
      tags:
      - Games
      description: Updates a game by ID.
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - game
    delete:
      summary: Delete Game
      tags:
      - Games
      description: Deletes a game by ID.
      responses:
        '200':
          description: successful
        '404':
          description: not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1
components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
      required:
      - id
      - name
      - slug
