/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** Format */
    Format: {
      /** Format: int64 */
      id?: number;
      name?: string;
    };
    /** Game */
    Game: {
      /** Format: int64 */
      id: number;
      name: string;
    };
    /** Game Details */
    GameDetail: {
      /** Format: int64 */
      id: number;
      name: string;
      formats: components["schemas"]["Format"][];
    };
    /** User */
    User: {
      username: string;
      pronouns: string;
      image_url?: string | null;
      /** Format: uuid */
      id: string;
    };
    /** User Details */
    UserDetails: {
      username: string;
      pronouns: string;
      image_url?: string | null;
      email: string;
      first_name: string;
      last_name: string;
      /** Format: uuid */
      id: string;
    };
    /** User Me */
    UserMe: {
      username: string;
      pronouns: string;
      image_url?: string | null;
      email: string;
      first_name: string;
      last_name: string;
      /** Format: uuid */
      id: string;
      organizations: components["schemas"]["Organization"][];
    };
    /** User Request */
    UserPostRequest: {
      username: string;
      pronouns: string;
      image_url?: string | null;
      email: string;
      first_name: string;
      last_name: string;
      /** Format: uuid */
      id?: string;
    };
    /** User Request */
    UserRequest: {
      username: string;
      pronouns: string;
      image_url?: string | null;
      email: string;
      first_name: string;
      last_name: string;
      /** Format: uuid */
      id?: string;
    };
    /** Registration Response */
    RegistrationResponse: {
      /** Format: uuid */
      id: string;
      /** Format: email */
      email: string;
      username: string;
      first_name: string;
      last_name: string;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      pronouns: string | null;
      /** Format: jwt */
      jti: string;
      name: string | null;
      image: string | null;
      admin?: boolean;
    };
    /** Organization */
    Organization: {
      owner: components["schemas"]["User"];
      description: string | null;
      /** Format: uri */
      logo_url: string | null;
      partner?: boolean;
      slug: string;
      /** Format: int64 */
      id: number;
      name: string;
    };
    /** Organization Details */
    OrganizationDetails: {
      owner: components["schemas"]["User"];
      description: string | null;
      /** Format: uri */
      logo_url: string | null;
      partner?: boolean;
      slug: string;
      /** Format: int64 */
      id: number;
      name: string;
    };
    /** Tournament */
    Tournament: {
      /** Format: date-time */
      start_at: string | null;
      organization: components["schemas"]["Organization"];
      format: components["schemas"]["Format"];
      game: components["schemas"]["Game"];
      /** Format: int64 */
      id: number;
      name: string;
      player_cap: number | null;
      player_count: number;
      /** Format: date-time */
      end_at?: string | null;
      /** Format: date-time */
      started_at?: string | null;
      /** Format: date-time */
      ended_at?: string | null;
      /** Format: date-time */
      registration_start_at: string | null;
      /** Format: date-time */
      registration_end_at: string | null;
      late_registration: boolean;
    };
    /** Tournament Details */
    TournamentDetails: {
      /** Format: int64 */
      id: number;
      name: string;
      autostart: boolean;
      /** Format: date-time */
      start_at: string | null;
      /** Format: date-time */
      end_at?: string | null;
      organization: components["schemas"]["Organization"];
      format: components["schemas"]["Format"];
      game: components["schemas"]["Game"];
      /** Format: date-time */
      check_in_start_at: string | null;
      late_registration: boolean;
      teamlists_required: boolean;
      open_team_sheets: boolean;
      player_cap: number | null;
      player_count: number;
      /** Format: date-time */
      started_at?: string | null;
      /** Format: date-time */
      ended_at?: string | null;
      /** Format: date-time */
      registration_start_at: string | null;
      /** Format: date-time */
      registration_end_at: string | null;
    };
    /** Pokemon */
    Pokemon: {
      /** Format: int64 */
      id: number;
      name: string;
      nickname?: string | null;
      ability: string;
      tera_type: string;
      nature: string;
      held_item: string | null;
      move1: string | null;
      move2: string | null;
      move3: string | null;
      move4: string | null;
    };
    /** Player Request */
    PlayerRequest: {
      /** Format: uuid */
      user_id: string;
      in_game_name: string;
    };
    /** Player */
    Player: {
      /** Format: int64 */
      id: number;
      user: components["schemas"]["User"];
      in_game_name: string;
    };
    /** Player Details */
    PlayerDetails: {
      /** Format: int64 */
      id: number;
      user: components["schemas"]["User"];
      in_game_name: string;
    };
    /** Round */
    Round: {
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      phase_id: number;
      /** Format: int64 */
      round_number: number;
      /** Format: date-time */
      started_at: string | null;
      /** Format: date-time */
      ended_at: string | null;
    };
    /** Phase */
    Phase: {
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      order: number;
      type?: string;
      /** Format: int64 */
      tournament_id: number;
      number_of_rounds: number;
      best_of: number;
      /** Format: date-time */
      started_at: string | null;
      /** Format: date-time */
      ended_at: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    /** Phase Details */
    PhaseDetails: {
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      order: number;
      type?: string;
      /** Format: int64 */
      tournament_id: number;
      number_of_rounds: number;
      best_of: number;
      /** Format: date-time */
      started_at: string | null;
      /** Format: date-time */
      ended_at: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      players: components["schemas"]["Player"][];
      rounds: components["schemas"]["Round"][];
    };
    /** GameRequest */
    GameRequest: {
      /** Format: int64 */
      id?: number;
      name: string;
    };
    /** Tournament Request */
    TournamentRequest: {
      /** Format: int64 */
      id?: number;
      name: string;
      /** Format: int64 */
      game_id: number;
      /** Format: int64 */
      format_id: number;
      autostart: boolean;
      /** Format: date-time */
      start_at: string;
      player_cap: number | null;
      /** Format: date-time */
      registration_start_at: string | null;
      /** Format: date-time */
      registration_end_at: string | null;
      late_registration: boolean;
      /** Format: date-time */
      check_in_start_at: string | null;
      open_team_sheets: boolean;
      teamlists_required: boolean;
    };
    /** Tournament Post Request */
    TournamentPostRequest: {
      /** Format: int64 */
      organization_id: number;
      name: string;
      /** Format: int64 */
      game_id: number;
      /** Format: int64 */
      format_id: number;
      autostart: boolean;
      /** Format: date-time */
      start_at?: string;
      player_cap: number | null;
      /** Format: date-time */
      registration_start_at: string | null;
      /** Format: date-time */
      registration_end_at: string | null;
      late_registration: boolean;
      /** Format: date-time */
      check_in_start_at: string | null;
      open_team_sheets: boolean;
      teamlists_required: boolean;
    };
    /** Get Session Params */
    GetSessionRequest: {
      /** Format: jwt */
      token: string;
    };
    /** Create Session */
    CreateSession: {
      /** Format: uuid */
      user_id: string;
      /** Format: jwt */
      session_token?: string;
      /** Format: date-time */
      expires_at?: string;
    };
    /** Session */
    Session: {
      username?: string;
      /** Format: jwt */
      token: string;
      /** Format: uuid */
      user_id: string;
      /** Format: date-time */
      expires_at: string;
    };
    /** Session And User */
    SessionAndUser: {
      session: components["schemas"]["Session"];
      user: components["schemas"]["UserDetails"];
    };
    Error: {
      error: string;
    };
    Message: {
      message: string;
    };
    Pagination: {
      current_page: number;
      next_page: number | null;
      prev_page: number | null;
      total_pages: number;
      total_count: number;
    };
  };
  responses: {
    /** @description not found */
    NotFound: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
  };
  parameters: {
    /** @description Page number for pagination */
    Page: string;
    /** @description Number of items per page for pagination */
    PerPage: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
