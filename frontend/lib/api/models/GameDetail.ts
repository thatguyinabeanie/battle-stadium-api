/* tslint:disable */
/* eslint-disable */
/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Format } from "./Format";
import { FormatFromJSON, FormatFromJSONTyped, FormatToJSON } from "./Format";

/**
 *
 * @export
 * @interface GameDetail
 */
export interface GameDetail {
  /**
   *
   * @type {number}
   * @memberof GameDetail
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof GameDetail
   */
  name: string;
  /**
   *
   * @type {Array<Format>}
   * @memberof GameDetail
   */
  formats: Array<Format>;
}

/**
 * Check if a given object implements the GameDetail interface.
 */
export function instanceOfGameDetail(value: object): value is GameDetail {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("formats" in value) || value["formats"] === undefined) return false;
  return true;
}

export function GameDetailFromJSON(json: any): GameDetail {
  return GameDetailFromJSONTyped(json, false);
}

export function GameDetailFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GameDetail {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    name: json["name"],
    formats: (json["formats"] as Array<any>).map(FormatFromJSON),
  };
}

export function GameDetailToJSON(value?: GameDetail | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: value["id"],
    name: value["name"],
    formats: (value["formats"] as Array<any>).map(FormatToJSON),
  };
}
