/* tslint:disable */
/* eslint-disable */
/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface TournamentRequest
 */
export interface TournamentRequest {
  /**
   *
   * @type {number}
   * @memberof TournamentRequest
   */
  id?: number
  /**
   *
   * @type {string}
   * @memberof TournamentRequest
   */
  name: string
  /**
   *
   * @type {number}
   * @memberof TournamentRequest
   */
  gameId: number
  /**
   *
   * @type {number}
   * @memberof TournamentRequest
   */
  formatId: number
  /**
   *
   * @type {boolean}
   * @memberof TournamentRequest
   */
  autostart: boolean
  /**
   *
   * @type {Date}
   * @memberof TournamentRequest
   */
  startAt: Date
  /**
   *
   * @type {number}
   * @memberof TournamentRequest
   */
  playerCap: number | null
  /**
   *
   * @type {Date}
   * @memberof TournamentRequest
   */
  registrationStartAt: Date | null
  /**
   *
   * @type {Date}
   * @memberof TournamentRequest
   */
  registrationEndAt: Date | null
  /**
   *
   * @type {boolean}
   * @memberof TournamentRequest
   */
  lateRegistration: boolean
  /**
   *
   * @type {Date}
   * @memberof TournamentRequest
   */
  checkInStartAt: Date | null
  /**
   *
   * @type {boolean}
   * @memberof TournamentRequest
   */
  openTeamSheets: boolean
  /**
   *
   * @type {boolean}
   * @memberof TournamentRequest
   */
  teamlistsRequired: boolean
}

/**
 * Check if a given object implements the TournamentRequest interface.
 */
export function instanceOfTournamentRequest(value: object): value is TournamentRequest {
  if (!("name" in value) || value["name"] === undefined) return false
  if (!("gameId" in value) || value["gameId"] === undefined) return false
  if (!("formatId" in value) || value["formatId"] === undefined) return false
  if (!("autostart" in value) || value["autostart"] === undefined) return false
  if (!("startAt" in value) || value["startAt"] === undefined) return false
  if (!("playerCap" in value) || value["playerCap"] === undefined) return false
  if (!("registrationStartAt" in value) || value["registrationStartAt"] === undefined) return false
  if (!("registrationEndAt" in value) || value["registrationEndAt"] === undefined) return false
  if (!("lateRegistration" in value) || value["lateRegistration"] === undefined) return false
  if (!("checkInStartAt" in value) || value["checkInStartAt"] === undefined) return false
  if (!("openTeamSheets" in value) || value["openTeamSheets"] === undefined) return false
  if (!("teamlistsRequired" in value) || value["teamlistsRequired"] === undefined) return false
  return true
}

export function TournamentRequestFromJSON(json: any): TournamentRequest {
  return TournamentRequestFromJSONTyped(json, false)
}

export function TournamentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentRequest {
  if (json == null) {
    return json
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"],
    gameId: json["game_id"],
    formatId: json["format_id"],
    autostart: json["autostart"],
    startAt: new Date(json["start_at"]),
    playerCap: json["player_cap"],
    registrationStartAt: json["registration_start_at"] == null ? null : new Date(json["registration_start_at"]),
    registrationEndAt: json["registration_end_at"] == null ? null : new Date(json["registration_end_at"]),
    lateRegistration: json["late_registration"],
    checkInStartAt: json["check_in_start_at"] == null ? null : new Date(json["check_in_start_at"]),
    openTeamSheets: json["open_team_sheets"],
    teamlistsRequired: json["teamlists_required"],
  }
}

export function TournamentRequestToJSON(value?: TournamentRequest | null): any {
  if (value == null) {
    return value
  }
  return {
    id: value["id"],
    name: value["name"],
    game_id: value["gameId"],
    format_id: value["formatId"],
    autostart: value["autostart"],
    start_at: value["startAt"].toISOString(),
    player_cap: value["playerCap"],
    registration_start_at:
      value["registrationStartAt"] == null ? null : (value["registrationStartAt"] as any).toISOString(),
    registration_end_at: value["registrationEndAt"] == null ? null : (value["registrationEndAt"] as any).toISOString(),
    late_registration: value["lateRegistration"],
    check_in_start_at: value["checkInStartAt"] == null ? null : (value["checkInStartAt"] as any).toISOString(),
    open_team_sheets: value["openTeamSheets"],
    teamlists_required: value["teamlistsRequired"],
  }
}
