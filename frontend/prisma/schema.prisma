generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ar_internal_metadata {
  key        String   @id @db.VarChar
  value      String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model clerk_users {
  id            BigInt   @id @default(autoincrement())
  user_id       String   @db.Uuid
  clerk_user_id String   @unique(map: "index_clerk_users_on_clerk_user_id") @db.VarChar
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
  users         users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_982e94e92d")

  @@index([user_id], map: "index_clerk_users_on_user_id")
}

model formats {
  id                 BigInt               @id @default(autoincrement())
  name               String?              @db.VarChar
  game_id            BigInt?
  created_at         DateTime             @db.Timestamp(6)
  updated_at         DateTime             @db.Timestamp(6)
  games              games?               @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_a0e0605606")
  tournament_formats tournament_formats[]

  @@unique([name, game_id], map: "index_formats_on_name_and_game_id")
  @@index([game_id], map: "index_formats_on_game_id")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model games {
  id          BigInt        @id @default(autoincrement())
  name        String?       @db.VarChar
  created_at  DateTime      @db.Timestamp(6)
  updated_at  DateTime      @db.Timestamp(6)
  formats     formats[]
  tournaments tournaments[]
}

model match_games {
  id                                     BigInt    @id @default(autoincrement())
  match_id                               BigInt
  winner_id                              BigInt?
  loser_id                               BigInt?
  created_at                             DateTime  @db.Timestamp(6)
  updated_at                             DateTime  @db.Timestamp(6)
  game_number                            Int       @default(1)
  ended_at                               DateTime? @db.Timestamp(6)
  reporter_id                            String?   @db.Uuid
  started_at                             DateTime? @db.Timestamp(6)
  matches                                matches   @relation(fields: [match_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_76cefaebc0")
  users                                  profiles? @relation(fields: [reporter_id], references: [id], onUpdate: NoAction, map: "fk_rails_85619f44a8")
  players_match_games_loser_idToplayers  players?  @relation("match_games_loser_idToplayers", fields: [loser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_a2c90fc36d")
  players_match_games_winner_idToplayers players?  @relation("match_games_winner_idToplayers", fields: [winner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_be3d6ef1eb")

  @@index([loser_id], map: "index_match_games_on_loser_id")
  @@index([match_id], map: "index_match_games_on_match_id")
  @@index([winner_id], map: "index_match_games_on_winner_id")
}

model matches {
  id                                     BigInt          @id @default(autoincrement())
  round_id                               BigInt
  table_number                           Int?
  player_one_id                          BigInt?
  player_two_id                          BigInt?
  winner_id                              BigInt?
  created_at                             DateTime        @db.Timestamp(6)
  updated_at                             DateTime        @db.Timestamp(6)
  player_one_check_in                    DateTime?       @db.Timestamp(6)
  player_two_check_in                    DateTime?       @db.Timestamp(6)
  loser_id                               BigInt?
  ended_at                               DateTime?       @db.Timestamp(6)
  tournament_id                          BigInt?
  phase_id                               BigInt?
  bye                                    Boolean         @default(false)
  reset_by                               String?         @db.Uuid
  chat_messages                          chat_messages[]
  match_games                            match_games[]
  phases                                 phases?         @relation(fields: [phase_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_36efc9f0f5")
  tournaments                            tournaments?    @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_700eaa2935")
  players_matches_loser_idToplayers      players?        @relation("matches_loser_idToplayers", fields: [loser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_973a5646ac")
  players_matches_winner_idToplayers     players?        @relation("matches_winner_idToplayers", fields: [winner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_9d0deeb219")
  players_matches_player_two_idToplayers players?        @relation("matches_player_two_idToplayers", fields: [player_two_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b58c6c3513")
  players_matches_player_one_idToplayers players?        @relation("matches_player_one_idToplayers", fields: [player_one_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_bfcd6a3c9f")
  rounds                                 rounds          @relation(fields: [round_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_e7c0250650")
  users                                  users?          @relation(fields: [reset_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_f377e2a0f8")

  @@unique([round_id, player_one_id, player_two_id], map: "index_matches_on_round_and_players_unique")
  @@index([loser_id], map: "index_matches_on_loser_id")
  @@index([player_one_id], map: "index_matches_on_player_one_id")
  @@index([player_two_id], map: "index_matches_on_player_two_id")
  @@index([winner_id], map: "index_matches_on_winner_id")
  @@index([phase_id], map: "index_matches_on_phase_id")
  @@index([tournament_id], map: "index_matches_on_tournament_id")
}

model organization_staff_members {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt
  created_at      DateTime      @db.Timestamp(6)
  updated_at      DateTime      @db.Timestamp(6)
  user_id         String?       @db.Uuid
  users           users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_65be078ae6")
  organizations   organizations @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_a177a0142c")

  @@index([organization_id], map: "index_organization_staff_members_on_organization_id")
}

model organizations {
  id                         BigInt                       @id @default(autoincrement())
  name                       String?                      @unique(map: "index_organizations_on_name") @db.VarChar
  description                String?
  created_at                 DateTime                     @db.Timestamp(6)
  updated_at                 DateTime                     @db.Timestamp(6)
  owner_id                   String?                      @db.Uuid
  logo_url                   String?                      @db.VarChar
  partner                    Boolean                      @default(false)
  hidden                     Boolean                      @default(false)
  slug                       String?                      @unique(map: "index_organizations_on_slug") @db.VarChar
  limitless_org_id           BigInt?
  organization_staff_members organization_staff_members[]
  users                      users?                       @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_ab574863f6")
  tournaments                tournaments[]
}

model phase_players {
  id         BigInt   @id @default(autoincrement())
  player_id  BigInt
  phase_type String   @db.VarChar
  phase_id   BigInt
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  players    players  @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_71fbe65d92")

  @@index([player_id], map: "index_phase_players_on_player_id")
  @@index([phase_type, phase_id], map: "index_tournament_phase_players_on_phase")
}

model phases {
  id                                               BigInt        @id @default(autoincrement())
  tournament_id                                    BigInt
  number_of_rounds                                 Int?
  created_at                                       DateTime      @db.Timestamp(6)
  updated_at                                       DateTime      @db.Timestamp(6)
  type                                             String        @db.VarChar
  name                                             String?       @db.VarChar
  best_of                                          Int           @default(3)
  started_at                                       DateTime?     @db.Timestamp(6)
  ended_at                                         DateTime?     @db.Timestamp(6)
  order                                            Int           @default(0)
  current_round_id                                 BigInt?
  matches                                          matches[]
  rounds                                           rounds?       @relation(fields: [current_round_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_2909e41898")
  tournaments                                      tournaments   @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_75e775589e")
  tournaments_tournaments_current_phase_idTophases tournaments[] @relation("tournaments_current_phase_idTophases")

  @@index([tournament_id], map: "index_phases_on_tournament_id")
  @@index([type], map: "index_phases_on_type")
  @@index([current_round_id], map: "index_phases_on_current_round_id")
}

model players {
  id                                         BigInt          @id @default(autoincrement())
  tournament_id                              BigInt
  created_at                                 DateTime        @db.Timestamp(6)
  updated_at                                 DateTime        @db.Timestamp(6)
  team_sheet_submitted                       Boolean         @default(false)
  checked_in_at                              DateTime?       @db.Timestamp(6)
  in_game_name                               String          @default("") @db.VarChar
  pokemon_team_id                            BigInt?
  profile_id                                 String          @db.Uuid
  user_id                                    String          @db.Uuid
  dropped                                    Boolean         @default(false)
  disqualified                               Boolean         @default(false)
  round_wins                                 Int             @default(0)
  round_losses                               Int             @default(0)
  game_wins                                  Int             @default(0)
  game_losses                                Int             @default(0)
  resistance                                 Decimal?        @db.Decimal(5, 2)
  match_games_match_games_loser_idToplayers  match_games[]   @relation("match_games_loser_idToplayers")
  match_games_match_games_winner_idToplayers match_games[]   @relation("match_games_winner_idToplayers")
  matches_matches_loser_idToplayers          matches[]       @relation("matches_loser_idToplayers")
  matches_matches_winner_idToplayers         matches[]       @relation("matches_winner_idToplayers")
  matches_matches_player_two_idToplayers     matches[]       @relation("matches_player_two_idToplayers")
  matches_matches_player_one_idToplayers     matches[]       @relation("matches_player_one_idToplayers")
  phase_players                              phase_players[]
  users                                      users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_224cac07ce")
  pokemon_teams                              pokemon_teams?  @relation(fields: [pokemon_team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_aeec102047")
  profiles                                   profiles        @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_d331b0f746")
  tournaments                                tournaments     @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_f96ec8a72f")

  @@unique([user_id, tournament_id], map: "index_players_on_user_id_and_tournament_id")
  @@index([pokemon_team_id], map: "index_players_on_pokemon_team_id")
  @@index([tournament_id], map: "index_players_on_tournament_id")
  @@index([profile_id], map: "index_players_on_profile_id")
}

model pokemon {
  id              BigInt        @id @default(autoincrement())
  name            String?       @db.VarChar
  ability         String?       @db.VarChar
  tera_type       String?       @db.VarChar
  nature          String?       @db.VarChar
  held_item       String?       @db.VarChar
  move1           String?       @db.VarChar
  move2           String?       @db.VarChar
  move3           String?       @db.VarChar
  move4           String?       @db.VarChar
  created_at      DateTime      @db.Timestamp(6)
  updated_at      DateTime      @db.Timestamp(6)
  nickname        String?       @db.VarChar
  pokemon_team_id BigInt        @default(0)
  pokemon_teams   pokemon_teams @relation(fields: [pokemon_team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_5b6022737b")

  @@index([pokemon_team_id], map: "index_pokemon_on_pokemon_team_id")
}

model pokemon_teams {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime  @db.Timestamp(6)
  profile_id String    @db.Uuid
  players    players[]
  pokemon    pokemon[]
  profiles   profiles  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_5264a490c6")
}

model rounds {
  id           BigInt    @id @default(autoincrement())
  phase_id     BigInt
  created_at   DateTime  @db.Timestamp(6)
  updated_at   DateTime  @db.Timestamp(6)
  round_number Int       @default(1)
  started_at   DateTime? @db.Timestamp(6)
  ended_at     DateTime? @db.Timestamp(6)
  matches      matches[]
  phases       phases[]

  @@unique([phase_id, round_number], map: "index_rounds_on_phase_id_and_round_number")
  @@index([phase_id], map: "index_rounds_on_phase_id")
}

model schema_migrations {
  version String @id @db.VarChar
}

model tournament_formats {
  id            BigInt      @id @default(autoincrement())
  tournament_id BigInt
  format_id     BigInt
  created_at    DateTime    @db.Timestamp(6)
  updated_at    DateTime    @db.Timestamp(6)
  formats       formats     @relation(fields: [format_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_08c15d3c37")
  tournaments   tournaments @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_c679052dc0")

  @@index([format_id], map: "index_tournament_formats_on_format_id")
  @@index([tournament_id], map: "index_tournament_formats_on_tournament_id")
}

model tournaments {
  id                                          BigInt               @id @default(autoincrement())
  name                                        String?              @db.VarChar
  start_at                                    DateTime?            @db.Timestamp(6)
  created_at                                  DateTime             @db.Timestamp(6)
  updated_at                                  DateTime             @db.Timestamp(6)
  organization_id                             BigInt?
  check_in_start_at                           DateTime?            @db.Timestamp(6)
  game_id                                     BigInt?
  format_id                                   BigInt?
  ended_at                                    DateTime?            @db.Timestamp(6)
  registration_start_at                       DateTime?            @db.Timestamp(6)
  registration_end_at                         DateTime?            @db.Timestamp(6)
  player_cap                                  Int?
  autostart                                   Boolean              @default(false)
  started_at                                  DateTime?            @db.Timestamp(6)
  late_registration                           Boolean              @default(true)
  teamlists_required                          Boolean              @default(true)
  open_team_sheets                            Boolean              @default(true)
  end_at                                      DateTime?            @db.Timestamp(6)
  limitless_id                                BigInt?
  published                                   Boolean              @default(false)
  current_phase_id                            BigInt?
  matches                                     matches[]
  phases                                      phases[]
  players                                     players[]
  tournament_formats                          tournament_formats[]
  organizations                               organizations?       @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_325ccadea6")
  phases_tournaments_current_phase_idTophases phases?              @relation("tournaments_current_phase_idTophases", fields: [current_phase_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_40bc0fb494")
  games                                       games?               @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_8ef7ba6258")

  @@index([format_id], map: "index_tournaments_on_format_id")
  @@index([game_id], map: "index_tournaments_on_game_id")
  @@index([organization_id], map: "index_tournaments_on_organization_id")
  @@index([current_phase_id], map: "index_tournaments_on_current_phase_id")
}

model users {
  id                                          String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                       String                       @unique(map: "index_users_on_email") @default("") @db.VarChar
  username                                    String?                      @unique(map: "index_users_on_username") @default("") @db.VarChar
  created_at                                  DateTime                     @db.Timestamp(6)
  updated_at                                  DateTime                     @db.Timestamp(6)
  first_name                                  String?                      @db.VarChar
  last_name                                   String?                      @db.VarChar
  pronouns                                    String                       @default("") @db.VarChar
  image_url                                   String?
  admin                                       Boolean                      @default(false)
  default_profile_id                          String?                      @db.Uuid
  chat_messages                               chat_messages[]
  clerk_users                                 clerk_users[]
  matches                                     matches[]
  organization_staff_members                  organization_staff_members[]
  organizations                               organizations[]
  players                                     players[]
  profiles_profiles_user_idTousers            profiles[]                   @relation("profiles_user_idTousers")
  profiles_users_default_profile_idToprofiles profiles?                    @relation("users_default_profile_idToprofiles", fields: [default_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_cee78b4b7d")
}

model chat_messages {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  match_id     BigInt
  profile_id   String    @db.Uuid
  content      String?
  user_id      String?   @db.Uuid
  message_type String?   @db.VarChar
  sent_at      DateTime? @db.Timestamp(6)
  users        users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_918ef7acc4")
  profiles     profiles  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_ef9208f8a6")
  matches      matches   @relation(fields: [match_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_f9ae4172ee")

  @@index([match_id], map: "index_chat_messages_on_match_id")
  @@index([user_id], map: "index_chat_messages_on_user_id")
  @@index([profile_id], map: "index_chat_messages_on_profile_id")
}

model friendly_id_slugs {
  id             BigInt    @id @default(autoincrement())
  slug           String    @db.VarChar
  sluggable_id   Int
  sluggable_type String?   @db.VarChar(50)
  scope          String?   @db.VarChar
  created_at     DateTime? @db.Timestamp(6)

  @@unique([slug, sluggable_type, scope], map: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope")
  @@index([slug, sluggable_type], map: "index_friendly_id_slugs_on_slug_and_sluggable_type")
  @@index([sluggable_type, sluggable_id], map: "index_friendly_id_slugs_on_sluggable_type_and_sluggable_id")
}

model profiles {
  id                                       String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                  String          @db.Uuid
  username                                 String          @unique(map: "index_profiles_on_username") @db.VarChar
  created_at                               DateTime        @db.Timestamp(6)
  updated_at                               DateTime        @db.Timestamp(6)
  image_url                                String?         @db.VarChar
  chat_messages                            chat_messages[]
  match_games                              match_games[]
  players                                  players[]
  pokemon_teams                            pokemon_teams[]
  users_profiles_user_idTousers            users           @relation("profiles_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_e424190865")
  users_users_default_profile_idToprofiles users[]         @relation("users_default_profile_idToprofiles")

  @@index([user_id], map: "index_profiles_on_user_id")
}
