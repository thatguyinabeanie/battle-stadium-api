// This file is auto-generated by @hey-api/openapi-ts

export type Format = {
  id?: number;
  name?: string;
};

export type Game = {
  id: number;
  name: string;
};

export type GameDetail = {
  id: number;
  name: string;
  formats: Array<Format>;
};

export type PasswordRequest = {
  /**
   * Must be at least 8 characters
   */
  password: string;
  /**
   * Must match the password.
   */
  password_confirmation: string;
};

export type ChangePasswordRequest = PasswordRequest & {
  /**
   * Your current password.
   */
  current_password: string;
};

export type User = {
  username: string;
  pronouns: string;
  id: number;
};

export type UserDetails = {
  username: string;
  pronouns: string;
  email: string;
  first_name: string;
  last_name: string;
  id: number;
};

export type UserPostRequest = {
  username: string;
  pronouns: string;
  email: string;
  first_name: string;
  last_name: string;
  id?: number;
  /**
   * Must be at least 8 characters
   */
  password: string;
  /**
   * Must match the password.
   */
  password_confirmation: string;
};

export type UserRequest = {
  username: string;
  pronouns: string;
  email: string;
  first_name: string;
  last_name: string;
  id?: number;
  /**
   * Your current password.
   */
  current_password: string;
};

export type Organization = {
  id: number;
  name: string;
  owner: User;
};

export type OrganizationDetails = {
  id: number;
  name: string;
  owner: UserDetails;
  description: string;
  updated_at: Date;
  created_at: Date;
};

export type Tournament = {
  id: number;
  name: string;
  player_cap: number | null;
};

export type TournamentDetails = {
  id: number;
  name: string;
  player_cap: number | null;
  autostart: boolean;
  start_at: Date | null;
  end_at?: Date | null;
  started_at?: Date | null;
  ended_at?: Date | null;
  late_check_in: boolean;
  check_in_start_at: Date | null;
  late_registration: boolean;
  registration_start_at: Date | null;
  registration_end_at: Date | null;
  teamlists_required: boolean;
  open_team_sheets: boolean;
};

export type Pokemon = {
  id: number;
  name: string;
  nickname?: string | null;
  ability: string;
  tera_type: string;
  nature: string;
  held_item: string | null;
  move1: string | null;
  move2: string | null;
  move3: string | null;
  move4: string | null;
};

export type PlayerRequest = {
  user_id: number;
  in_game_name: string;
};

export type Player = {
  id: number;
  user: User;
  in_game_name: string;
};

export type PlayerDetails = {
  id: number;
  user: User;
  in_game_name: string;
};

export type Round = {
  id: number;
  phase_id: number;
  round_number: number;
  started_at: Date | null;
  ended_at: Date | null;
};

export type Phase = {
  id: number;
  name: string;
  order: number;
  type?: string;
  tournament_id: number;
  number_of_rounds: number;
  best_of: number;
  criteria: string | null;
  started_at: Date | null;
  ended_at: Date | null;
  created_at?: Date;
  updated_at?: Date;
};

export type PhaseDetails = {
  id: number;
  name: string;
  order: number;
  type?: string;
  tournament_id: number;
  number_of_rounds: number;
  best_of: number;
  criteria: string | null;
  started_at: Date | null;
  ended_at: Date | null;
  created_at?: Date;
  updated_at?: Date;
  players: Array<Player>;
  rounds: Array<Round>;
};

export type GameRequest = {
  id?: number;
  name: string;
};

export type UserLoginRequest = {
  email: string;
  /**
   * Must be at least 8 characters
   */
  password: string;
};

export type ListGamesResponse = Array<Game>;

export type PostGameData = {
  requestBody?: Game;
};

export type PostGameResponse = GameDetail;

export type GetGameData = {
  /**
   * ID of the game
   */
  id: number;
};

export type GetGameResponse = GameDetail;

export type PatchGameData = {
  /**
   * ID of the game
   */
  id: number;
  requestBody?: Game;
};

export type PatchGameResponse = GameDetail;

export type DeleteGameData = {
  /**
   * ID of the game
   */
  id: number;
};

export type DeleteGameResponse = unknown;

export type ListOrganizationsResponse = Array<Organization>;

export type PostOrganizationData = {
  requestBody?: Organization;
};

export type PostOrganizationResponse = OrganizationDetails;

export type GetOrganizationData = {
  id: string;
};

export type GetOrganizationResponse = OrganizationDetails;

export type PatchOrganizationData = {
  id: string;
  requestBody?: Organization;
};

export type PatchOrganizationResponse = OrganizationDetails;

export type DeleteOrganizationData = {
  id: string;
};

export type DeleteOrganizationResponse = unknown;

export type GetOrganizationStaffData = {
  id: string;
};

export type GetOrganizationStaffResponse = Array<User>;

export type ListTournamentPhasesData = {
  /**
   * ID of the tournament
   */
  tournamentId: number;
};

export type ListTournamentPhasesResponse = Array<Phase>;

export type PostTournamentPhaseData = {
  requestBody?: Phase;
  /**
   * ID of the tournament
   */
  tournamentId: number;
};

export type PostTournamentPhaseResponse = PhaseDetails;

export type ShowTournamentPhaseData = {
  /**
   * ID of the Phase
   */
  id: number;
  /**
   * ID of the tournament
   */
  tournamentId: number;
};

export type ShowTournamentPhaseResponse = PhaseDetails;

export type PutTournamentPhaseData = {
  /**
   * ID of the Phase
   */
  id: number;
  requestBody?: Phase;
  /**
   * ID of the tournament
   */
  tournamentId: number;
};

export type PutTournamentPhaseResponse = PhaseDetails;

export type DeleteTournamentPhaseData = {
  /**
   * ID of the Phase
   */
  id: number;
  /**
   * ID of the tournament
   */
  tournamentId: number;
};

export type DeleteTournamentPhaseResponse = unknown;

export type ListPlayersData = {
  /**
   * ID of the Tournament
   */
  tournamentId: number;
};

export type ListPlayersResponse = Array<Player>;

export type PostTournamentPlayerData = {
  requestBody?: PlayerRequest;
  /**
   * ID of the Tournament
   */
  tournamentId: number;
};

export type PostTournamentPlayerResponse = PlayerDetails;

export type ShowTournamentPlayerData = {
  /**
   * ID of the Player
   */
  id: number;
  /**
   * ID of the Tournament
   */
  tournamentId: number;
};

export type ShowTournamentPlayerResponse = PlayerDetails;

export type PutTournamentPlayerData = {
  /**
   * ID of the Player
   */
  id: number;
  requestBody?: PlayerRequest;
  /**
   * ID of the Tournament
   */
  tournamentId: number;
};

export type PutTournamentPlayerResponse = PlayerDetails;

export type DeleteTournamentPlayerData = {
  /**
   * ID of the Player
   */
  id: number;
  /**
   * ID of the Tournament
   */
  tournamentId: number;
};

export type DeleteTournamentPlayerResponse = unknown;

export type ListTournamentsData = {
  /**
   * ID of the Organization
   */
  organizationId: number;
};

export type ListTournamentsResponse = Array<Tournament>;

export type PostTournamentData = {
  /**
   * ID of the Organization
   */
  organizationId: number;
  requestBody?: TournamentDetails;
};

export type PostTournamentResponse = TournamentDetails;

export type GetTournamentData = {
  /**
   * ID of the Tournament
   */
  id: number;
  /**
   * ID of the Organization
   */
  organizationId: number;
};

export type GetTournamentResponse = TournamentDetails;

export type PutTournamentData = {
  /**
   * ID of the Tournament
   */
  id: number;
  /**
   * ID of the Organization
   */
  organizationId: number;
  requestBody?: TournamentDetails;
};

export type PutTournamentResponse = TournamentDetails;

export type DeleteTournamentData = {
  /**
   * ID of the Tournament
   */
  id: number;
  /**
   * ID of the Organization
   */
  organizationId: number;
};

export type DeleteTournamentResponse = unknown;

export type ListUsersResponse = Array<User>;

export type PostUserData = {
  requestBody?: UserPostRequest;
};

export type PostUserResponse = UserDetails;

export type GetUserData = {
  /**
   * ID of the User
   */
  id: number;
};

export type GetUserResponse = UserDetails;

export type PatchUserData = {
  /**
   * ID of the User
   */
  id: number;
  requestBody?: UserDetails;
};

export type PatchUserResponse = UserDetails;

export type DeleteUserData = {
  /**
   * ID of the User
   */
  id: number;
};

export type DeleteUserResponse = unknown;

export type LoginUserData = {
  requestBody?: UserLoginRequest;
};

export type LoginUserResponse = unknown;

export type $OpenApiTs = {
  "/api/v1/games": {
    get: {
      res: {
        /**
         * successful
         */
        200: Array<Game>;
      };
    };
    post: {
      req: PostGameData;
      res: {
        /**
         * created
         */
        201: GameDetail;
        /**
         * bad request
         */
        400: unknown;
      };
    };
  };
  "/api/v1/games/{id}": {
    get: {
      req: GetGameData;
      res: {
        /**
         * successful
         */
        200: GameDetail;
        /**
         * not found
         */
        404: unknown;
      };
    };
    patch: {
      req: PatchGameData;
      res: {
        /**
         * successful
         */
        200: GameDetail;
        /**
         * not found
         */
        404: unknown;
      };
    };
    delete: {
      req: DeleteGameData;
      res: {
        /**
         * successful
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/organizations": {
    get: {
      res: {
        /**
         * successful
         */
        200: Array<Organization>;
      };
    };
    post: {
      req: PostOrganizationData;
      res: {
        /**
         * created
         */
        201: OrganizationDetails;
      };
    };
  };
  "/api/v1/organizations/{id}": {
    get: {
      req: GetOrganizationData;
      res: {
        /**
         * successful
         */
        200: OrganizationDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    patch: {
      req: PatchOrganizationData;
      res: {
        /**
         * successful
         */
        200: OrganizationDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    delete: {
      req: DeleteOrganizationData;
      res: {
        /**
         * Organization deleted
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/organizations/{id}/staff": {
    get: {
      req: GetOrganizationStaffData;
      res: {
        /**
         * successful
         */
        200: Array<User>;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/tournaments/{tournament_id}/phases": {
    get: {
      req: ListTournamentPhasesData;
      res: {
        /**
         * successful
         */
        200: Array<Phase>;
        /**
         * not found
         */
        404: unknown;
      };
    };
    post: {
      req: PostTournamentPhaseData;
      res: {
        /**
         * created
         */
        201: PhaseDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/tournaments/{tournament_id}/phases/{id}": {
    get: {
      req: ShowTournamentPhaseData;
      res: {
        /**
         * successful
         */
        200: PhaseDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    put: {
      req: PutTournamentPhaseData;
      res: {
        /**
         * successful
         */
        200: PhaseDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    delete: {
      req: DeleteTournamentPhaseData;
      res: {
        /**
         * successful
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/tournaments/{tournament_id}/players": {
    get: {
      req: ListPlayersData;
      res: {
        /**
         * successful
         */
        200: Array<Player>;
        /**
         * not found
         */
        404: unknown;
      };
    };
    post: {
      req: PostTournamentPlayerData;
      res: {
        /**
         * created
         */
        201: PlayerDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/tournaments/{tournament_id}/players/{id}": {
    get: {
      req: ShowTournamentPlayerData;
      res: {
        /**
         * successful
         */
        200: PlayerDetails;
      };
    };
    patch: {
      req: PutTournamentPlayerData;
      res: {
        /**
         * successful
         */
        200: PlayerDetails;
      };
    };
    delete: {
      req: DeleteTournamentPlayerData;
      res: {
        /**
         * successful
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/organizations/{organization_id}/tournaments": {
    get: {
      req: ListTournamentsData;
      res: {
        /**
         * successful
         */
        200: Array<Tournament>;
      };
    };
    post: {
      req: PostTournamentData;
      res: {
        /**
         * created
         */
        201: TournamentDetails;
        /**
         * unprocessable entity
         */
        422: unknown;
      };
    };
  };
  "/api/v1/organizations/{organization_id}/tournaments/{id}": {
    get: {
      req: GetTournamentData;
      res: {
        /**
         * successful
         */
        200: TournamentDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    put: {
      req: PutTournamentData;
      res: {
        /**
         * successful
         */
        200: TournamentDetails;
      };
    };
    delete: {
      req: DeleteTournamentData;
      res: {
        /**
         * successful
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/api/v1/users": {
    get: {
      res: {
        /**
         * successful
         */
        200: Array<User>;
      };
    };
    post: {
      req: PostUserData;
      res: {
        /**
         * created
         */
        201: UserDetails;
        /**
         * unprocessable entity
         */
        422: unknown;
      };
    };
  };
  "/api/v1/users/{id}": {
    get: {
      req: GetUserData;
      res: {
        /**
         * successful
         */
        200: UserDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    patch: {
      req: PatchUserData;
      res: {
        /**
         * successful
         */
        200: UserDetails;
        /**
         * not found
         */
        404: unknown;
      };
    };
    delete: {
      req: DeleteUserData;
      res: {
        /**
         * successful
         */
        200: unknown;
        /**
         * not found
         */
        404: unknown;
      };
    };
  };
  "/login": {
    post: {
      req: LoginUserData;
      res: {
        /**
         * created
         */
        201: unknown;
        /**
         * unauthorized
         */
        401: unknown;
      };
    };
  };
};
