<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="186" skipped="5" failures="0" errors="0" time="3.704426" timestamp="2024-07-29T15:11:31+00:00" hostname="f9bf6ccc115e">
<properties>
<property name="seed" value="47373"/>
</properties>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match match reporting #report_winner! correctly identifies the winner" file="./spec/models/tournament/match_spec.rb" time="0.269547"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match match reporting #report_winner! correctly identifies the loser" file="./spec/models/tournament/match_spec.rb" time="0.051733"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match match reporting report_loser! correctly identifies the loser" file="./spec/models/tournament/match_spec.rb" time="0.050371"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match match reporting report_loser! correctly identifies the winner" file="./spec/models/tournament/match_spec.rb" time="0.049843"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match associations is expected to belong to round class_name =&gt; Tournament::Round required: true" file="./spec/models/tournament/match_spec.rb" time="0.001829"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match associations is expected to belong to player_two class_name =&gt; Tournament::Player required: true" file="./spec/models/tournament/match_spec.rb" time="0.001321"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match associations is expected to belong to player_one class_name =&gt; Tournament::Player required: true" file="./spec/models/tournament/match_spec.rb" time="0.001270"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match validations is not valid without a round" file="./spec/models/tournament/match_spec.rb" time="0.049372"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match validations is valid with valid attributes" file="./spec/models/tournament/match_spec.rb" time="0.063183"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) raises an error if the player is not part of the match" file="./spec/models/tournament/match_spec.rb" time="0.056470"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) checking in player_two does not check in player one" file="./spec/models/tournament/match_spec.rb" time="0.049883"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) checks in player_one does not check in player two" file="./spec/models/tournament/match_spec.rb" time="0.048980"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) does not check in player two by default" file="./spec/models/tournament/match_spec.rb" time="0.048505"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) checks in player_two" file="./spec/models/tournament/match_spec.rb" time="0.048909"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) does not check in player one by default" file="./spec/models/tournament/match_spec.rb" time="0.047691"></testcase>
<testcase classname="spec.models.tournament.match_spec" name="Tournament::Match#check_in(player:) checks in player_one" file="./spec/models/tournament/match_spec.rb" time="0.048319"></testcase>
<testcase classname="spec.controllers.api.v1.tournaments_controller_spec" name="Api::V1::TournamentsController GET /index add some examples (or delete) /workspaces/battle-stadium/spec/controllers/api/v1/tournaments_controller_spec.rb" file="./spec/controllers/api/v1/tournaments_controller_spec.rb" time="0.000007"><skipped/></testcase>
<testcase classname="spec.models.organization.staff_member_spec" name="OrganizationStaffMember table name has the correct table name" file="./spec/models/organization/staff_member_spec.rb" time="0.000559"></testcase>
<testcase classname="spec.models.organization.staff_member_spec" name="OrganizationStaffMember associations belongs to an organization" file="./spec/models/organization/staff_member_spec.rb" time="0.000551"></testcase>
<testcase classname="spec.models.organization.staff_member_spec" name="OrganizationStaffMember associations belongs to a user" file="./spec/models/organization/staff_member_spec.rb" time="0.000504"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament associations is expected to belong to format class_name =&gt; Tournament::Format required: true" file="./spec/models/tournament/tournament_spec.rb" time="0.001814"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament associations is expected to have many players class_name =&gt; Tournament::Player dependent =&gt; destroy_async" file="./spec/models/tournament/tournament_spec.rb" time="0.000637"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament associations is expected to belong to organization class_name =&gt; Organization::Organization required: true" file="./spec/models/tournament/tournament_spec.rb" time="0.001557"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament associations is expected to have many phases class_name =&gt; Phase::BasePhase dependent =&gt; destroy_async" file="./spec/models/tournament/tournament_spec.rb" time="0.000918"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament associations is expected to belong to game class_name =&gt; Game required: true" file="./spec/models/tournament/tournament_spec.rb" time="0.001595"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when registration start time is in the future returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.010980"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when registration start time is in the past when registration end time is nil returns true" file="./spec/models/tournament/tournament_spec.rb" time="0.010872"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when registration start time is in the past when current time is after registration end time returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.010196"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when registration start time is in the past when current time is before registration end time returns true" file="./spec/models/tournament/tournament_spec.rb" time="0.010561"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when player cap is present when trying to add registration after player cap is reached raises an error" file="./spec/models/tournament/tournament_spec.rb" time="0.030586"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when player cap is present when registrations count is equal to player cap returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.022635"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when player cap is present when registrations count is less than player cap returns true" file="./spec/models/tournament/tournament_spec.rb" time="0.018893"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament registration when registration start time is nil returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.010504"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is not valid without an organization" file="./spec/models/tournament/tournament_spec.rb" time="0.004978"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is not valid without a game" file="./spec/models/tournament/tournament_spec.rb" time="0.009292"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is not valid without a start_at" file="./spec/models/tournament/tournament_spec.rb" time="0.009119"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is not valid without a format" file="./spec/models/tournament/tournament_spec.rb" time="0.007988"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is not valid without a name" file="./spec/models/tournament/tournament_spec.rb" time="0.008979"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament validations is valid with valid attributes" file="./spec/models/tournament/tournament_spec.rb" time="0.009402"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament start_tournament! raises error if there are no players" file="./spec/models/tournament/tournament_spec.rb" time="0.011718"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament start_tournament! raises error if there are no phases" file="./spec/models/tournament/tournament_spec.rb" time="0.010535"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament start_tournament! updates actual_start_time" file="./spec/models/tournament/tournament_spec.rb" time="0.054843"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament ready_to_start? when phases are empty returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.011156"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament ready_to_start? when phases are present when first phase is valid returns true" file="./spec/models/tournament/tournament_spec.rb" time="0.091920"></testcase>
<testcase classname="spec.models.tournament.tournament_spec" name="Tournament::Tournament ready_to_start? when phases are present when first phase is invalid returns false" file="./spec/models/tournament/tournament_spec.rb" time="0.012298"></testcase>
<testcase classname="spec.controllers.api.v1.tournament.players_controller_spec" name="Api::V1::Tournament::PlayersController GET /index add some examples (or delete) /workspaces/battle-stadium/spec/controllers/api/v1/tournament/players_controller_spec.rb" file="./spec/controllers/api/v1/tournament/players_controller_spec.rb" time="0.000003"><skipped/></testcase>
<testcase classname="spec.models.ability_spec" name="Ability Ability add some examples (or delete) /workspaces/battle-stadium/spec/models/ability_spec.rb" file="./spec/models/ability_spec.rb" time="0.000002"><skipped/></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations post created returns a 201 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.022822"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations get successful returns a 200 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.005881"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} delete not found returns a 404 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.062763"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} delete Organization deleted returns a 200 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.011200"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} get successful returns a 200 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.009013"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} get not found returns a 404 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.051411"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} patch successful returns a 200 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.012113"></testcase>
<testcase classname="spec.requests.api.v1.organizations_spec" name="api/v1/organizations /api/v1/organizations/{id} patch not found returns a 404 response" file="./spec/requests/api/v1/organizations_spec.rb" time="0.052397"></testcase>
<testcase classname="spec.models.tournament.format_spec" name="Tournament::Format validations is expected to validate that :name is case-sensitively unique within the scope of :game_id" file="./spec/models/tournament/format_spec.rb" time="0.005098"></testcase>
<testcase classname="spec.models.tournament.format_spec" name="Tournament::Format validations is expected to validate that the length of :name is at most 255" file="./spec/models/tournament/format_spec.rb" time="0.001613"></testcase>
<testcase classname="spec.models.tournament.format_spec" name="Tournament::Format validations is expected to validate that :game cannot be empty/falsy" file="./spec/models/tournament/format_spec.rb" time="0.001690"></testcase>
<testcase classname="spec.models.tournament.format_spec" name="Tournament::Format validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/tournament/format_spec.rb" time="0.002057"></testcase>
<testcase classname="spec.models.tournament.format_spec" name="Tournament::Format associations belongs to a game" file="./spec/models/tournament/format_spec.rb" time="0.003644"></testcase>
<testcase classname="spec.models.game_spec" name="Game validations is invalid without a name" file="./spec/models/game_spec.rb" time="0.000643"></testcase>
<testcase classname="spec.models.game_spec" name="Game validations is valid with a name" file="./spec/models/game_spec.rb" time="0.001331"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations tournaments has no tournaments by default" file="./spec/models/game_spec.rb" time="0.000750"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations tournaments has many tournaments" file="./spec/models/game_spec.rb" time="0.020411"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations tournaments does not destroys associated tournaments when destroyed" file="./spec/models/game_spec.rb" time="0.004990"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations formats has many formats" file="./spec/models/game_spec.rb" time="0.004122"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations formats has no formats by default" file="./spec/models/game_spec.rb" time="0.000652"></testcase>
<testcase classname="spec.models.game_spec" name="Game associations formats does not destroy associated formats when destroyed" file="./spec/models/game_spec.rb" time="0.004646"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round associations has many matches" file="./spec/models/tournament/round_spec.rb" time="0.079071"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round associations belongs to a phase" file="./spec/models/tournament/round_spec.rb" time="0.012063"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round validations is expected to validate that :phase is case-sensitively unique within the scope of :round_number" file="./spec/models/tournament/round_spec.rb" time="0.015628"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round validations is expected to validate that :round_number cannot be empty/falsy" file="./spec/models/tournament/round_spec.rb" time="0.013303"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round validations is expected to validate that :round_number is case-sensitively unique within the scope of :phase_id" file="./spec/models/tournament/round_spec.rb" time="0.015870"></testcase>
<testcase classname="spec.models.tournament.round_spec" name="Tournament::Round validations is expected to validate that :phase cannot be empty/falsy" file="./spec/models/tournament/round_spec.rb" time="0.013494"></testcase>
<testcase classname="spec.controllers.api.v1.registrations_controller_spec" name="Api::V1::RegistrationsController GET /index add some examples (or delete) /workspaces/battle-stadium/spec/controllers/api/v1/registrations_controller_spec.rb" file="./spec/controllers/api/v1/registrations_controller_spec.rb" time="0.000004"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.users_controller_spec" name="Api::V1::UsersController GET /index add some examples (or delete) /workspaces/battle-stadium/spec/controllers/api/v1/users_controller_spec.rb" file="./spec/controllers/api/v1/users_controller_spec.rb" time="0.000002"><skipped/></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player validations is expected to validate that :tournament_id cannot be empty/falsy" file="./spec/models/tournament/player_spec.rb" time="0.017367"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player validations is expected to validate that :user_id is case-sensitively unique within the scope of :tournament_id, producing a custom validation error on failure" file="./spec/models/tournament/player_spec.rb" time="0.018691"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player validations is expected to validate that :user_id cannot be empty/falsy" file="./spec/models/tournament/player_spec.rb" time="0.022462"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to belong to tournament class_name =&gt; Tournament::Tournament required: true inverse_of =&gt; players" file="./spec/models/tournament/player_spec.rb" time="0.001345"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to have many phase_players class_name =&gt; Tournament::PhasePlayer dependent =&gt; destroy inverse_of =&gt; player" file="./spec/models/tournament/player_spec.rb" time="0.000918"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to have many pokemon_sets class_name =&gt; Tournament::PokemonSet dependent =&gt; destroy inverse_of =&gt; player" file="./spec/models/tournament/player_spec.rb" time="0.000644"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to belong to user class_name =&gt; User required: true" file="./spec/models/tournament/player_spec.rb" time="0.001299"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to have many phases through phase_players source =&gt; phase" file="./spec/models/tournament/player_spec.rb" time="0.000691"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player associations is expected to accepts_nested_attributes_for :pokemon_sets" file="./spec/models/tournament/player_spec.rb" time="0.001009"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player methods validates the count of pokemon sets" file="./spec/models/tournament/player_spec.rb" time="0.153942"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player methods adds multiple pokemon sets" file="./spec/models/tournament/player_spec.rb" time="0.050297"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player methods adds a pokemon set" file="./spec/models/tournament/player_spec.rb" time="0.033125"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player methods raises an error when adding an empty pokemon set" file="./spec/models/tournament/player_spec.rb" time="0.015230"></testcase>
<testcase classname="spec.models.tournament.player_spec" name="Tournament::Player methods adds pokemon sets and save" file="./spec/models/tournament/player_spec.rb" time="0.047049"></testcase>
<testcase classname="spec.db.seeds_spec" name="Seed Data loads successfully" file="./spec/db/seeds_spec.rb" time="0.043933"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! raises an error if the reporter is not a match player or staff member" file="./spec/models/tournament/match_game_spec.rb" time="0.042962"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! sets the reporter if the reporter is a tournament staff" file="./spec/models/tournament/match_game_spec.rb" time="0.032479"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! does not allow a third person to be the loser" file="./spec/models/tournament/match_game_spec.rb" time="0.045588"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! reports the game with the loser as the loser" file="./spec/models/tournament/match_game_spec.rb" time="0.031386"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! does not allow a third person to be the winner" file="./spec/models/tournament/match_game_spec.rb" time="0.051010"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! sets the reported_at attribute" file="./spec/models/tournament/match_game_spec.rb" time="0.033916"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame#report! reports the game with the winner as the winner" file="./spec/models/tournament/match_game_spec.rb" time="0.032270"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates that winner and loser must be either player 1 or player 2" file="./spec/models/tournament/match_game_spec.rb" time="0.058105"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :game_number" file="./spec/models/tournament/match_game_spec.rb" time="0.029785"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations does not add any errors when reporter is nil" file="./spec/models/tournament/match_game_spec.rb" time="0.029304"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations adds an error when reporter is not a player or staff member" file="./spec/models/tournament/match_game_spec.rb" time="0.033583"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates that winner and loser cannot be the same" file="./spec/models/tournament/match_game_spec.rb" time="0.051476"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations does not add any errors when reporter is one of the players" file="./spec/models/tournament/match_game_spec.rb" time="0.029961"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations does not add any errors when reporter is a staff member of the tournament organization" file="./spec/models/tournament/match_game_spec.rb" time="0.030812"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :winner" file="./spec/models/tournament/match_game_spec.rb" time="0.029958"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :match" file="./spec/models/tournament/match_game_spec.rb" time="0.029916"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :loser" file="./spec/models/tournament/match_game_spec.rb" time="0.029985"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates that winner must be either player 1 or player 2" file="./spec/models/tournament/match_game_spec.rb" time="0.028573"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :reporter" file="./spec/models/tournament/match_game_spec.rb" time="0.030014"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates presence of :reported_at" file="./spec/models/tournament/match_game_spec.rb" time="0.029357"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame validations validates that loser must be either player 1 or player 2" file="./spec/models/tournament/match_game_spec.rb" time="0.027929"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to belong to match class_name =&gt; Tournament::Match required: true" file="./spec/models/tournament/match_game_spec.rb" time="0.029485"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to belong to loser class_name =&gt; Tournament::Player optional: true" file="./spec/models/tournament/match_game_spec.rb" time="0.029042"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to belong to reporter class_name =&gt; User optional: true" file="./spec/models/tournament/match_game_spec.rb" time="0.033120"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to delegate #player_one to the #match object" file="./spec/models/tournament/match_game_spec.rb" time="0.032509"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to belong to winner class_name =&gt; Tournament::Player optional: true" file="./spec/models/tournament/match_game_spec.rb" time="0.030437"></testcase>
<testcase classname="spec.models.tournament.match_game_spec" name="Tournament::MatchGame associations is expected to delegate #player_two to the #match object" file="./spec/models/tournament/match_game_spec.rb" time="0.029922"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization friendly_id uses the name attribute for friendly_id" file="./spec/models/organization/organization_spec.rb" time="0.005970"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/organization/organization_spec.rb" time="0.011106"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization validations validates uniqueness of owner_id" file="./spec/models/organization/organization_spec.rb" time="0.011940"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations is expected to have many staff through organization_staff_members source =&gt; user" file="./spec/models/organization/organization_spec.rb" time="0.000634"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations is expected to have many tournaments class_name =&gt; Tournament::Tournament dependent =&gt; destroy" file="./spec/models/organization/organization_spec.rb" time="0.000604"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations is expected to have many organization_staff_members class_name =&gt; OrganizationStaffMember dependent =&gt; destroy" file="./spec/models/organization/organization_spec.rb" time="0.000588"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations is expected to belong to owner required: true" file="./spec/models/organization/organization_spec.rb" time="0.001472"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations adding and removing tournaments adds tournament to organization tournaments" file="./spec/models/organization/organization_spec.rb" time="0.018468"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations adding and removing tournaments removes tournament from organization tournaments" file="./spec/models/organization/organization_spec.rb" time="0.020039"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations adding and removing staff does not have any staff by default" file="./spec/models/organization/organization_spec.rb" time="0.006574"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations adding and removing staff removes user from organization staff" file="./spec/models/organization/organization_spec.rb" time="0.012490"></testcase>
<testcase classname="spec.models.organization.organization_spec" name="Organization::Organization associations adding and removing staff adds user to organization staff" file="./spec/models/organization/organization_spec.rb" time="0.011163"></testcase>
<testcase classname="spec.models.concerns.match_players_concern_spec" name="MatchPlayersConcern when reporting game results #report! updates the winner, loser, reporter, and reported_at" file="./spec/models/concerns/match_players_concern_spec.rb" time="0.008366"></testcase>
<testcase classname="spec.models.concerns.match_players_concern_spec" name="MatchPlayersConcern when reporting game results #report_winner! reports the winner and loser" file="./spec/models/concerns/match_players_concern_spec.rb" time="0.007508"></testcase>
<testcase classname="spec.models.concerns.match_players_concern_spec" name="MatchPlayersConcern when reporting game results #report_loser! reports the loser and winner" file="./spec/models/concerns/match_players_concern_spec.rb" time="0.007591"></testcase>
<testcase classname="spec.models.concerns.match_players_concern_spec" name="MatchPlayersConcern#opponent_for returns the opponent for player_two" file="./spec/models/concerns/match_players_concern_spec.rb" time="0.007511"></testcase>
<testcase classname="spec.models.concerns.match_players_concern_spec" name="MatchPlayersConcern#opponent_for returns the opponent for player_one" file="./spec/models/concerns/match_players_concern_spec.rb" time="0.007531"></testcase>
<testcase classname="spec.models.phase.swiss_spec" name="Phase::Swiss inheritance inherits from Phase::BasePhase" file="./spec/models/phase/swiss_spec.rb" time="0.000650"></testcase>
<testcase classname="spec.models.phase.swiss_spec" name="Phase::Swiss table_name returns the correct table name" file="./spec/models/phase/swiss_spec.rb" time="0.000555"></testcase>
<testcase classname="spec.models.phase.swiss_spec" name="Phase::Swiss create successfully creates a swiss phase" file="./spec/models/phase/swiss_spec.rb" time="0.011731"></testcase>
<testcase classname="spec.models.phase.swiss_spec" name="Phase::Swiss validations validates presence of :name" file="./spec/models/phase/swiss_spec.rb" time="0.001994"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games get successful returns a 200 response" file="./spec/requests/api/v1/games_spec.rb" time="0.005617"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games post created returns a 201 response" file="./spec/requests/api/v1/games_spec.rb" time="0.003524"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games post unprocessable entity returns a 422 response" file="./spec/requests/api/v1/games_spec.rb" time="0.001700"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} delete not found returns a 404 response" file="./spec/requests/api/v1/games_spec.rb" time="0.052987"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} delete successful returns a 200 response" file="./spec/requests/api/v1/games_spec.rb" time="0.005006"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} patch not found returns a 404 response" file="./spec/requests/api/v1/games_spec.rb" time="0.047751"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} patch successful returns a 200 response" file="./spec/requests/api/v1/games_spec.rb" time="0.004713"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} get not found returns a 404 response" file="./spec/requests/api/v1/games_spec.rb" time="0.046261"></testcase>
<testcase classname="spec.requests.api.v1.games_spec" name="api/v1/games /api/v1/games/{id} get successful returns a 200 response" file="./spec/requests/api/v1/games_spec.rb" time="0.004284"></testcase>
<testcase classname="spec.models.phase.single_elimination_bracket_spec" name="Phase::SingleEliminationBracket#update updates the attributes of a single elimination bracket phase" file="./spec/models/phase/single_elimination_bracket_spec.rb" time="0.002709"></testcase>
<testcase classname="spec.models.phase.single_elimination_bracket_spec" name="Phase::SingleEliminationBracket#table_name returns the correct table name" file="./spec/models/phase/single_elimination_bracket_spec.rb" time="0.000734"></testcase>
<testcase classname="spec.models.phase.single_elimination_bracket_spec" name="Phase::SingleEliminationBracket#create creates a new single elimination bracket phase" file="./spec/models/phase/single_elimination_bracket_spec.rb" time="0.001168"></testcase>
<testcase classname="spec.models.phase.single_elimination_bracket_spec" name="Phase::SingleEliminationBracket#destroy destroys a single elimination bracket phase" file="./spec/models/phase/single_elimination_bracket_spec.rb" time="0.001226"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.002133"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :move1 cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001878"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :move3 cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001803"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :move2 cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001665"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :tera_type cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001491"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :held_item cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001459"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :move4 cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001464"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :nature cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001447"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet validations is expected to validate that :ability cannot be empty/falsy" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.001450"></testcase>
<testcase classname="spec.models.tournament.pokemon_set_spec" name="Tournament::PokemonSet associations is expected to belong to player class_name =&gt; Tournament::Player required: true inverse_of =&gt; pokemon_sets" file="./spec/models/tournament/pokemon_set_spec.rb" time="0.000969"></testcase>
<testcase classname="spec.models.user_spec" name="User validations is not valid without a first name" file="./spec/models/user_spec.rb" time="0.003412"></testcase>
<testcase classname="spec.models.user_spec" name="User validations is not valid without an email" file="./spec/models/user_spec.rb" time="0.002813"></testcase>
<testcase classname="spec.models.user_spec" name="User validations is not valid without a username" file="./spec/models/user_spec.rb" time="0.002726"></testcase>
<testcase classname="spec.models.user_spec" name="User validations is valid with valid attributes" file="./spec/models/user_spec.rb" time="0.003207"></testcase>
<testcase classname="spec.models.user_spec" name="User validations is not valid without a last name" file="./spec/models/user_spec.rb" time="0.003170"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase additional validation when best_of is even adds an error to best_of" file="./spec/models/phase/base_phase_spec.rb" time="0.013463"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase additional validation when best_of is even is invalid" file="./spec/models/phase/base_phase_spec.rb" time="0.010743"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase additional validation when best_of is odd is expected to be valid" file="./spec/models/phase/base_phase_spec.rb" time="0.010436"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase associations is expected to have many rounds class_name =&gt; Tournament::Round inverse_of =&gt; phase dependent =&gt; destroy" file="./spec/models/phase/base_phase_spec.rb" time="0.000664"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase associations is expected to belong to tournament class_name =&gt; Tournament::Tournament required: true" file="./spec/models/phase/base_phase_spec.rb" time="0.001053"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase abstract class is true" file="./spec/models/phase/base_phase_spec.rb" time="0.000557"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase#accept_players sets the players" file="./spec/models/phase/base_phase_spec.rb" time="0.073687"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase table name is &apos;phases&apos;" file="./spec/models/phase/base_phase_spec.rb" time="0.000577"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/phase/base_phase_spec.rb" time="0.001670"></testcase>
<testcase classname="spec.models.phase.base_phase_spec" name="Phase::BasePhase validations is expected to validate that :best_of looks like an integer greater than 0" file="./spec/models/phase/base_phase_spec.rb" time="0.001733"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} patch successful returns a 200 response" file="./spec/requests/api/v1/users_spec.rb" time="0.011225"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} patch not found returns a 404 response" file="./spec/requests/api/v1/users_spec.rb" time="0.051345"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} delete successful returns a 200 response" file="./spec/requests/api/v1/users_spec.rb" time="0.008916"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} delete not found returns a 404 response" file="./spec/requests/api/v1/users_spec.rb" time="0.048072"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} get successful returns a 200 response" file="./spec/requests/api/v1/users_spec.rb" time="0.006904"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users/{id} get not found returns a 404 response" file="./spec/requests/api/v1/users_spec.rb" time="0.047598"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users get successful returns a 200 response" file="./spec/requests/api/v1/users_spec.rb" time="0.004713"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users post unprocessable entity returns a 422 response" file="./spec/requests/api/v1/users_spec.rb" time="0.004645"></testcase>
<testcase classname="spec.requests.api.v1.users_spec" name="api/v1/users /api/v1/users post created returns a 201 response" file="./spec/requests/api/v1/users_spec.rb" time="0.005307"></testcase>
</testsuite>
