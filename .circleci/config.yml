# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:

  run-rspec-tests:
    docker:
      - image: cimg/ruby:3.3
        environment:
          DATABASE_URL: postgres://postgres:password@localhost:5432/rotom_db
      - image: cimg/postgres:16.3 # Use PostgreSQL image
        environment: # Set environment variables for PostgreSQL
          POSTGRES_USER: postgres
          POSTGRES_DB: rotom_db
          POSTGRES_PASSWORD: password

    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: |
            cd backend
            bundle install
      - run:
          name: "Prepare database"
          command: |
            cd backend
            bundle exec rake db:create db:schema:load --trace
      - run:
          name: "Run RSpec tests"
          command: |
            cd backend
            bundle exec rspec
  run-jest-tests: # New job for running Jest tests
    docker:
      - image: cimg/node:20
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: |
            cd frontend
            npm install
      - run:
          name: "Run Jest tests"
          command: |
            cd frontend
            npm run test
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - run-rspec-tests
      - run-jest-tests
