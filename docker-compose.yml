services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=fuecoco-db-dev
    ports:
      - 5432:5432

  backend:
    hostname: rails-api-container
    image: thatguyinabeanie/battle-stadium:latest
    environment:
      RAILS_ENV: production
      PORT: 10000
    build:
      context: backend
      dockerfile: Dockerfile.prod
      target: production
      tags:
        - thatguyinabeanie/battle-stadium:latest
      cache_from:
        - thatguyinabeanie/battle-stadium:latest
    command: >
      bash -c "
        ./bin/rails server -b 0.0.0.0 -p 10000
        tail -f /dev/null
      "
    tty: true
    stdin_open: true
    ports:
      - 10000:10000
      - 3000:10000
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:10000/up" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    volumes:
      - ./backend:/rails
      - ./backend/.zshrc:/root/.zshenv
      - ./backend/.zshrc:/root/.zshrc

  frontend:
    hostname: nextjs-container
    image: thatguyinabeanie/battle-stadium:frontend-dev-latest
    build:
      context: frontend
      dockerfile: Dockerfile
      target: development
      tags:
        - thatguyinabeanie/battle-stadium:frontend-dev-latest
    command: >
      zsh -c "
        # start_server && \
        tail -f /dev/null
      "
    tty: true
    depends_on:
      - postgres
    ports:
      - 8080:10001
    volumes:
      - .:/battle-stadium
      - ./frontend/.zshrc:/root/.zshenv
      - ./frontend/.zshrc:/root/.zshrc
volumes:
  postgres-data:
