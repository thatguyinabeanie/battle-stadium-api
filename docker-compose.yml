services:
  rails_api_dev_base:
    image: thatguyinabeanie/battle-stadium:development-base-latest
    build:
      context: rails_api
      dockerfile: Dockerfile.rails_api_dev
      target: development-base-image
      tags:
        - thatguyinabeanie/battle-stadium:development-base-latest

  # BATTLE STADIUM RAILS APP CONTAINER
  rails_api:
    image: thatguyinabeanie/battle-stadium:development-base-latest
    build:
      context: rails_api
      dockerfile: Dockerfile.rails_api_dev
      target: development
      tags:
        - thatguyinabeanie/battle-stadium:development-latest
    command: sleep infinity
    tty: true
    ports:
      - 3000:3000
      - 5173:5173
    depends_on:
      - db
      - rails_api_dev_base
    env_file:
      - rails_api/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/up" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    volumes:
      - ./rails_api:/workspaces/battle-stadium
      - ./next_js:/workspaces/next_js
      - ./rails_api/tmp:/tmp
      # - ./rails_api/.bashrc:/root/.bashrc
      - bundle-data:/root/.bundle

  # BATTLE STADIUM PRODUCTION CONTAINER
  production:
    image: battle-stadium:latest
    profiles: [ "production" ]
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - battle-stadium:latest
    command: >
      bash -lc "
        rm -f tmp/pids/server.pid &&
        (bundle check || bundle install) &&
        (rails db:prepare || rails db:setup) &&
        sleep infinity
      "
    volumes:
      - .:/rails
      - bundle-data:/root/.bundle
    ports:
      - "4000:3000"
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/fuecoco_db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/up" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    tty: true

  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

volumes:
  postgres-data:
  bundle-data:
