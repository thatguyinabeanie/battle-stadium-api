services:
  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env.postgres
    ports:
      - 5432:5432

  # BATTLE STADIUM RAILS APP CONTAINER
  backend:
    image: thatguyinabeanie/battle-stadium:dev-latest
    build:
      context: backend
      dockerfile: Dockerfile
      target: development
      tags:
        - thatguyinabeanie/battle-stadium:dev-latest
      cache_from:
        - thatguyinabeanie/battle-stadium:dev-latest
    command: >
      zsh -c "
        start_server && \
        tail -f /dev/null
      "
    tty: true
    ports:
      - 3000:3000
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/up" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    environment:
      HOST_ENVIRONMENT: container
      DB_HOST: db
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    env_file:
      - .env.postgres
    volumes:
      - .:/battle-stadium
      - ./backend/.zshrc:/root/.zshenv
      - ./backend/.zshrc:/root/.zshrc

  frontend:
    environment:
      HOST_ENVIRONMENT: container
      BACKEND_HOST: backend
    image: thatguyinabeanie/battle-stadium:frontend-dev-latest
    build:
      context: frontend
      dockerfile: Dockerfile
      target: development
      tags:
        - thatguyinabeanie/battle-stadium:frontend-dev-latest
    command: >
      zsh -c "
        start_server && \
        tail -f /dev/null
      "
    tty: true
    ports:
      - 8080:8080
    volumes:
      - .:/battle-stadium
      - ./frontend/.zshrc:/root/.zshenv
      - ./frontend/.zshrc:/root/.zshrc
volumes:
  postgres-data:
