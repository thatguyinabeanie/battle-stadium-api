services:
  postgres:
    command: -c 'max_connections=1000'
    networks:
      - battle-stadium-network
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=fuecoco-db-dev
    ports:
      - 5432:5432

  redis:
    networks:
      - battle-stadium-network
    image: redis:7
    restart: unless-stopped
    ports:
      - 6379:6379

  sidekiq:
    networks:
      - battle-stadium-network
    image: thatguyinabeanie/battle-stadium:dev-latest
    command: zsh -c "(bundle check || bundle install) && bundle exec sidekiq"
    environment:
      RAILS_ENV: development
      ADMIN_BYPASS: "true"
      REDIS_URL: redis://redis:6379/1
    ports:
      - 10001:3000
    depends_on:
      - postgres
      - redis
      - backend
    volumes:
      - .:/battle-stadium
      - .zshrc:/root/.zshenv
      - .zshrc:/root/.zshrc

  # RAILS API - DEVELOPMENT CONTAINER
  backend:
    networks:
      - battle-stadium-network
    hostname: rails-api-container
    image: thatguyinabeanie/battle-stadium:dev-latest
    environment:
      RAILS_ENV: development
      PORT: 10000
      AUTO_START_RAILS: "true"
      ADMIN_BYPASS: "true"
      REDIS_URL: redis://redis:6379/1
    build:
      dockerfile: Dockerfile.dev
      target: development
      tags:
        - thatguyinabeanie/battle-stadium:dev-latest
      cache_from:
        - thatguyinabeanie/battle-stadium:dev-latest
    tty: true
    stdin_open: true
    ports:
      - 10000:10000
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:10000/up"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    volumes:
      - .:/battle-stadium
      - ./.zshrc:/root/.zshenv
      - ./.zshrc:/root/.zshrc

  # RAILS API - PRODUCTION CONTAINER
  backend-prod:
    networks:
      - battle-stadium-network
    profiles:
      - production
    hostname: rails-api-container
    platform: linux/amd64
    environment:
      RAILS_ENV: production
      PORT: 10000
    build:
      dockerfile: Dockerfile.prod
      target: production
      tags:
        - thatguyinabeanie/battle-stadium:latest
      cache_from:
        - thatguyinabeanie/battle-stadium:prod-cache-latest
    tty: true
    stdin_open: true
    ports:
      - 10000:10000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10001/up"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  postgres-data:

networks:
  battle-stadium-network:
    name: battle-stadium-network
    external: true
