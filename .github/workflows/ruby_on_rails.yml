name: Ruby on Rails CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  rspec-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    env:
      RAILS_ENV: test
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DEVISE_JWT_SECRET_KEY: ${{ secrets.DEVISE_JWT_SECRET_KEY }}

    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true

      - name: Install dependencies
        run: bundle check || bundle install

      - name: Prepare database
        run: bundle exec rake db:create db:schema:load --trace
      - name: Run RSpec tests
        run: bundle exec rspec
        # run: bundle exec rspec --format RspecJunitFormatter --out test-results/rspec/results.xml

    # - name: Upload RSpec results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: rspec-results
    #     path: test-results/rspec/results.xml

    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v4.0.1
    #   if: always()
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     file: ./coverage/index.html # Specify the path to your coverage report
    #     flags: unittests
    #     name: codecov-umbrella
    #     verbose: true

  ruby-audit:
    defaults:
      run:
        working-directory: ./backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true

      - name: Install dependencies
        run: bundle check || bundle install

      - name: Run Ruby Audit
        run: bundle exec ruby-audit check

  rubocop-check:
    defaults:
      run:
        working-directory: ./backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true

      - name: Install dependencies
        run: bundle check || bundle install

      - name: Run RuboCop with Reviewdog
        uses: reviewdog/action-rubocop@v2
        with:
          workdir: ./backend
          rubocop_version: gemfile
          rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile rubocop-performance:gemfile rubocop-rspec:gemfile
          only_changed: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review # Default is github-pr-check
          skip_install: true
          use_bundler: true
