name: Ruby on Rails CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  rspec-tests:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      RAILS_DB_HOST: localhost
      RAILS_DB_PORT: 5432
      RAILS_DB_USERNAME: postgres
      RAILS_DB_PASSWORD: password
      RAILS_DB_NAME: fuecoco_db_test

    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: fuecoco_db_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.4
        bundler-cache: true
        working-directory: ./rails_api

    - name: Install dependencies
      run: cd rails_api && (bundle check || bundle install)

    - name: Prepare database
      run: |
        bundle exec rake db:create db:schema:load --trace
      env:
        DATABASE_URL: "postgres://postgres:password@localhost:5432/fuecoco_db_test"
      working-directory: ./rails_api

    - name: Run RSpec tests
      env:
        DEVISE_JWT_SECRET_KEY: ${{ secrets.DEVISE_JWT_SECRET_KEY }}
      run: |
        mkdir -p rails_api/test-results/rspec
        bundle exec rspec --format RspecJunitFormatter --out rails_api/test-results/rspec/results.xml
      working-directory: ./rails_api

    - name: Upload RSpec results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rspec-results
        path: rails_api/test-results/rspec/results.xml

    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v4.0.1
    #   if: always()
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     file: ./coverage/index.html # Specify the path to your coverage report
    #     flags: unittests
    #     name: codecov-umbrella
    #     verbose: true

  ruby-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true
          working-directory: ./rails_api

      - name: Install dependencies
        run: cd rails_api && (bundle check || bundle install)

      - name: Run Ruby Audit
        run: cd rails_api && bundle exec ruby-audit check

  rubocop-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true
          working-directory: ./rails_api

      - name: Install dependencies
        run: cd rails_api && (bundle check || bundle install)

      - name: Run RuboCop with Reviewdog
        uses: reviewdog/action-rubocop@v2
        with:
          rubocop_version: gemfile
          rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile rubocop-performance:gemfile rubocop-rspec:gemfile
          only_changed: true
          workdir: rails_api
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review # Default is github-pr-check
          skip_install: true
          use_bundler: true
